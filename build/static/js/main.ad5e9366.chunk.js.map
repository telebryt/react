{"version":3,"sources":["reportWebVitals.js","components/layouts/Footer.js","Actions/Types.js","Actions/messages.js","Actions/Auth.js","components/layouts/logo.JPG","components/layouts/Header.js","components/Container/pages/Post.js","Actions/Post.js","components/Container/Accounts/Login.js","components/Container/Accounts/Register.js","components/Container/pages/detailPage.js","components/Container/pages/CreatePost.js","components/Container/PageNotFound.js","Reducers/Auth.js","Reducers/Post.js","Reducers/comments.js","Reducers/errors.js","Reducers/messages.js","Reducers/index.js","store.js","components/Container/pages/Update.js","components/Container/pages/searchbar.js","components/Container/pages/category.js","components/layouts/alert.js","components/Container/pages/Profile.js","components/Container/pages/NewProfile.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","className","href","Component","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADING","USER_LOADED","AUTH_FAIL","AUTH_ERROR","LOGOUT_SUCCESS","ADD_POST","GET_POST","DELETE_POST","GET_COMMENTS","ADD_COMMENT","GET_UPDATE","POST_UPDATED","CREATE_MESSAGE","GET_ERRORS","ADD_PROFILE","RESET_PASSWORD","createMessage","msg","type","payload","returnErrors","status","Profiles","dispatch","getState","axios","get","tokenConfig","res","data","catch","err","login","username","password","body","JSON","stringify","post","headers","error","response","token","Auth","config","connect","state","logout","Header","props","prototype","PropTypes","object","isRequired","func","isAuthenticated","user","profile","console","log","history","useHistory","useState","search","setData","isStaff","profiledata","image","prouser","is_staff","hour","Date","getHours","AuthLinks","to","src","alt","onClick","onSubmit","e","push","pathname","window","location","reload","toast","placeholder","aria-label","name","required","onChange","newValue","GuestLnks","logo","data-toggle","data-target","aria-controls","aria-expanded","id","posts","GetPost","loadUser","feature","setfeature","trending","setTrending","loading","setloading","useEffect","success","pageNumber","setPagenumber","pagesVisited","pageCount","Math","ceil","length","title","trend","excerpt","map","images","height","width","substr","Published","subAuthor","category","slice","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousClassName","nextClassName","disabledClassName","activeClassName","scrollTo","Login","setState","target","value","preventDefault","this","htmlFor","autoFocus","Register","email","password2","newUser","Registers","DetailedPage","listen","action","useParams","coms","comments","setcomment","setLoading","lform","setlform","author","formdata","updateformdata","OnChange","sendcomment","content","aria-hidden","data-dismiss","o","i","textSizeRatio","color","Avatar","getRandomColor","size","round","datas","role","aria-multiselectable","data-parent","aria-labelledby","CreatePost","initialState","Object","freeze","campus","postimage","UpdatePostImage","files","postform","FormData","append","info","disabled","PageNotFound","isLoading","localStorage","getItem","update","inistialState","combineReducers","removeItem","filter","errors","messages","persistConfig","key","storage","persistedReducer","persistReducer","rootReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","UpdatePosts","url","put","Searchbar","appState","setAppState","setisLoading","allPosts","failed","Category","catBlog","setCateBlog","setCategory","categorys","match","params","cat","Alerts","prevProps","message","join","non_field_errors","deletePost","deleteLead","addPost","addLead","passwordNotMatch","PasswordReset","old_password","new_password","Profile","passRet","setPassRet","profiles","userdata","university","bio","interest","NewProfile","about","profi","App","exact","path","component","Post","DetailPage","exa1t","Update","autoClose","hideProgressBar","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad5e9366.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n    render() {\n        return (\n          <>\n            <footer>\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-lg-8 col-md-10 mx-auto\">\n                    <ul className=\"list-inline text-center\">\n                      <li className=\"list-inline-item\">\n                        <a href=\"https://twitter.com/CampusNewx\">\n                          <span className=\"fa-stack fa-lg\">\n                            <i className=\"fas fa-circle fa-stack-2x\"></i>\n                            <i className=\"fab fa-twitter fa-stack-1x fa-inverse\"></i>\n                          </span>\n                        </a>\n                      </li>\n                      <li className=\"list-inline-item\">\n                        <a href=\"https://web.facebook.com/campus.newx\">\n                          <span className=\"fa-stack fa-lg\">\n                            <i className=\"fas fa-circle fa-stack-2x\"></i>\n                            <i className=\"fab fa-facebook-f fa-stack-1x fa-inverse\"></i>\n                          </span>\n                        </a>\n                      </li>\n                      <li className=\"list-inline-item\">\n                        <a href=\"https://github.com/campusNewx\">\n                          <span className=\"fa-stack fa-lg\">\n                            <i className=\"fas fa-circle fa-stack-2x\"></i>\n                            <i className=\"fab fa-github fa-stack-1x fa-inverse\"></i>\n                          </span>\n                        </a>\n                      </li>\n                    </ul>\n                    <p className=\"copyright text-muted\">\n                      Copyright &copy; Campus News 2021\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </footer>\n          </>\n        );\n    }\n}\n","export const SIGNUP_SUCCESS = \"SIGN_SUCCESS\";\nexport const SIGNUP_FAIL = \"SIGNUP_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const ADD_POST = \"ADD_POST\";\nexport const GET_POST = \"GET_POST\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const GET_COMMENTS = \"GET_COMMENTS\";\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const COMMENT_FAIL = \"COMMENT_FAIL\";\nexport const GET_UPDATE = \"GET_UPDATE\";\nexport const POST_UPDATED = \"POST_UPDATED\"; \nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const LOGOUT_FAIL = \"LOGOUT_FAIL\";\nexport const ADD_PROFILE = \"ADD_PROFILE\";\nexport const RESET_PASSWORD = \"RESET_PASSWORD\";","import { CREATE_MESSAGE, GET_ERRORS } from \"./Types\";\n\n// CREATE MESSAGE\nexport const createMessage = (msg) => {\n  return {\n    type: CREATE_MESSAGE,\n    payload: msg,\n  };\n};\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status },\n  };\n};\n","import axios from \"axios\";\nimport { returnErrors } from \"./messages\";\nimport {\n  SIGNUP_FAIL,\n  SIGNUP_SUCCESS,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  USER_LOADING,\n  USER_LOADED,\n  AUTH_FAIL,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAIL,\n  ADD_PROFILE,\n  RESET_PASSWORD,\n} from \"./Types\";\n\nexport const loadUser = () => (dispatch, getState) => {\n  dispatch({ type: USER_LOADING });\n//  const url = \"http://127.0.0.1:8000/api/users\";\n  const url = \"https://telebryt.pythonanywhere.com/api/user\";\n  axios\n    .get(url, tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    })\n    .catch((err) => { \n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_FAIL,\n      });\n    });\n};\n\nexport const Profiles = () => (dispatch, getState) => {\n  dispatch({ type: USER_LOADING });\n\n  const url = \"https://telebryt.pythonanywhere.com/api/profile\";\n  //  const url = \"http://127.0.0.1:8000/api/profile\";\n  axios\n    .get(url, tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: ADD_PROFILE,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      // dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_FAIL,\n      });\n    });\n};\n\n export const PasswordReset = ({ old_password, new_password }) => (dispatch,getState) => {\n  const url = \"https://telebryt.pythonanywhere.com/api/changepassword\";\n  const body = JSON.stringify({ old_password, new_password });\n  axios\n    .put(url, body,tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: RESET_PASSWORD,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_FAIL,\n      });\n    });\n};\n\n\n//regisgter User\nexport const Registers = ({ username, email, password }) => (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n \n const body = JSON.stringify({ username, email, password });\n  const url = \"https://telebryt.pythonanywhere.com/api/register\";\n  axios\n    .post(url, body, config)\n    .then((res) => {\n      dispatch({\n        type: SIGNUP_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: SIGNUP_FAIL,\n      });\n    });\n};\n\n//Login User\nexport const login = (username, password) => (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ username, password });\n  const url = \"https://telebryt.pythonanywhere.com/api/login\";\n  // const url = \"http://127.0.0.1:8000/api/login\";\n  axios\n    .post(url, body, config)\n    .then((res) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      // dispatch(toast.error(\"Login successfully\"));\n    })\n    .catch((error) => {\n      dispatch(returnErrors(error.response.data, error.response.status));\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n      throw error;\n      // dispatch(toast.error(\"Invalid Credentials\"));\n    });\n};\n\nexport const logout = () => (dispatch, getState) => {\n  const url = \"https://telebryt.pythonanywhere.com/api/logout\";\n  // const url = \"http://127.0.0.1:8000/api/logout\";\n  axios\n    .post(url, null, tokenConfig(getState))\n    .then((res) => {\n      dispatch({ type: \"LOGOUT_SUCCESS\" });\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: LOGOUT_FAIL,\n      });\n    });\n};\n\n//function for getting the state\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n  // Get token from state\n  const token = getState().Auth.token;\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // If token, add to headers config\n  if (token) {\n    config.headers[\"Authorization\"] = `Token ${token}`;\n  }\n\n  return config;\n};\n","export default __webpack_public_path__ + \"static/media/logo.aa6408d7.JPG\";","import React, { useState,useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../Actions/Auth\";\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport logo from './logo.JPG';\nimport axios from 'axios';\nimport { Profiles } from \"../../Actions/Auth\";\n\nconst Header = (props) => {\n  Header.prototype = {\n    Auth: PropTypes.object.isRequired,\n    logout: PropTypes.func.isRequired,\n  };\n\n  // const [profileData, setprofileData] = useState({ profiles: [] });\n  const { isAuthenticated, user, profile } = props.Auth;\n\n  // console.log(profileData, profile)\n console.log(profile)\nlet history = useHistory();\nconst [data, setData] = useState({ search: \"\" });\n  const goSearch = (e) => {\n    if (data.search !== \"\") {\n      history.push({\n        pathname: \"/search/\",\n        search: \"?search=\" + data.search,\n      });\n      window.location.reload();\n    }\n    else {\n      toast.error(\"You cannot Search Empty Field\");\n    }\n  };\n  let isStaff =false\n  let profiledata = []\n  if (profile != null) {\n    profiledata = profile.data.image\n    isStaff = profile.data.prouser.is_staff\n  } else {\n    profiledata = []\n  }\n  console.log(profiledata,isStaff)\n  const date = new Date();\n  const hour = date.getHours();\n  const AuthLinks = (\n    <ul className=\"navbar-nav ml-auto\">\n      <li className=\"nav-item pr-2\">\n        <h4 className=\"text-capitalize \">\n          {\" \"}\n          <Link to=\"/profile\">\n            {\" \"}\n            <img\n              src={`https://telebryt.pythonanywhere.com` + profiledata}\n              alt=\"Campus New\"\n              className=\"avatar rounded-circle\"\n            />{\" \"}\n            {user ? `${user.username}` : \"\"}{\" \"}\n          </Link>\n        </h4>\n      </li>\n      <li className=\"nav-item\">\n        <span className=\"nav-link\">\n          <Link to=\"/\">Home</Link>\n        </span>\n      </li>\n      {isStaff ? (\n        <li className=\"nav-item\">\n          <span className=\"nav-link\">\n            {\" \"}\n            <Link to=\"/createPost\">Create Post</Link>\n          </span>\n        </li>\n      ) : (\n        \"\"\n      )}\n      {\"  \"}\n      <li className=\"nav-item\">\n        <span className=\"nav-link\">\n          <Link className=\"text-danger\" to=\"/\" onClick={props.logout}>\n            Logout\n          </Link>\n        </span>\n      </li>\n      <li className=\"nav-item\">\n        <strong>\n          <form\n            className=\"form-inline my-2 my-md-0 float-right\"\n            onSubmit={goSearch}\n          >\n            <div className=\"input-group\">\n              <input\n                className=\"form-control mr-sm-1 rounded-left\"\n                type=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n                name=\"search\"\n                required\n                onChange={(newValue) => setData({ search: newValue })}\n              />\n              <div className=\"input-group-append\">\n                <button type=\"submit\" className=\"btn btn-outline-info rounded-right\">\n                  <i className=\"fa fa-search\"></i>\n                </button>\n              </div>\n            </div>\n          </form>\n        </strong>\n      </li>\n    </ul>\n  );\n\n  const GuestLnks = (\n    <ul className=\"navbar-nav ml-auto\">\n      <li className=\"nav-item\">\n        <span className=\"nav-link\">\n          <Link to=\"/\">Home</Link>\n        </span>\n      </li>\n      <li className=\"nav-item\">\n        <span className=\"nav-link\">\n          {\" \"}\n          <Link to=\"/register\">Register</Link>\n        </span>\n      </li>\n      <li className=\"nav-item\">\n        <span className=\"nav-link\">\n          {\" \"}\n          <Link to=\"/login\">Login</Link>\n        </span>\n      </li>\n    </ul>\n  );\n\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-md navbar-light fixed-top bg-light\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <img src={logo} alt=\"Campus New\" className=\"image\" />\n            <span className=\"name\">Campus News</span>\n          </Link>\n          <button\n            className=\"navbar-toggler navbar-toggler-right\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            Menu\n            <em className=\"fas fa-bars\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            {isAuthenticated ? AuthLinks : GuestLnks}\n          </div>\n        </div>\n      </nav>\n      <header className=\"masthead\">\n        <div className=\"overlay\"></div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-8 col-md-10 mx-auto\">\n              <div className=\"site-heading\">\n                <h1>Campus News</h1>\n                <span className=\"subheading\">\n                  Explore Your Campus Always With A smile 😊 😌{\" \"}\n                </span>\n                <span className=\"subheading\">\n                  Please the App is under testing ....\n                </span>\n                <span className=\"subheading\">\n                  For recommendation or interest{\" \"}\n                  <a href=\"https://wa.me/233543340697\">click here</a>\n                </span>\n                <div className=\"text-white font-weight-bold h5 mt-4\">\n                  <span>\n                    <div>\n                      {hour < 12\n                        ? \"Good Morning\"\n                        : hour > 11 && hour < 17\n                        ? \"Good afternoon \"\n                        : \"Good evening\"}\n                    </div>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  Auth: state.Auth,\n  logout: state.Auth,\n});\nexport default connect(mapStateToProps, { logout,Profiles })(Header);\n\n\n\n\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { GetPost } from \"../../../Actions/Post\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport ReactPaginate from \"react-paginate\";\nimport { Profiles } from \"../../../Actions/Auth\";\nimport { loadUser } from \"../../../Actions/Auth\";\nfunction Post(props) {\n  const [feature, setfeature] = useState({\n    post: [],\n  });\n  const [trending, setTrending] = useState({\n    post: [],\n  });\n  const [loading, setloading] = useState(false);\n  Post.propTypes = {\n    posts: PropTypes.array.isRequired,\n    GetPost: PropTypes.func.isRequired,\n  };\n\n  useEffect(() => {\n    props.GetPost();\n    props.Profiles();\n    // props.loadUser();\n  }, []);\n\n  useEffect(() => {\n    axios\n      .get(\"https://telebryt.pythonanywhere.com/api/featured/\")\n      .then((res) => {\n        setfeature({\n          post: res.data[0],\n        });\n      });\n    axios.get(\"https://telebryt.pythonanywhere.com/api/trending\").then((res) => {\n      setTrending({\n        post: res.data,\n      });\n      toast.success(\"Welcome to CN 😊 😘\");\n      setloading(true);\n      console.log(res.data);\n    });\n  }, []);\n  const [pageNumber, setPagenumber] = useState(0);\n  const PostperPage = 5;\n  const pagesVisited = PostperPage * pageNumber;\n  const pageCount = Math.ceil(props.posts.length / PostperPage);\n  const ChangePage = ({ selected }) => {\n    setPagenumber(selected);\n  };\n  console.log(feature.post.title);\n  const trend = trending.post;\n  console.log(trend);\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <div className=\"nav-scroller py-1 mb-2\">\n          <nav className=\"nav d-flex justify-content-between\">\n            <Link className=\"p-2 link-secondary\" to=\"category/News\">\n              News\n            </Link>\n            <Link className=\"p-2 link-secondary\" to=\"category/Politics\">\n              Politics\n            </Link>\n            <Link className=\"p-2 link-secondary\" to=\"category/Relationship\">\n              Relationship\n            </Link>\n            <Link className=\"p-2 link-secondary\" to=\"category/Education\">\n              Education\n            </Link>\n            <Link className=\"p-2 link-secondary\" to=\"category/Blog\">\n              Blog\n            </Link>\n            <Link className=\"p-2 link-secondary\" to=\"category/Article\">\n              Article\n            </Link>\n\n            <Link className=\"p-2 link-secondary\" to=\"category/Science\">\n              Science\n            </Link>\n            <Link className=\"p-2 link-secondary\" to=\"category/Entertainment\">\n              Entertainment\n            </Link>\n          </nav>\n        </div>\n\n        {loading ? (\n          <div>\n            <div className=\"p-4 p-md-5 mb-4 text-white rounded featured \">\n              <div className=\"col-md-6 px-0\">\n                <h3 className=\"fst-italic text-capitalize\">\n                  {feature.post.title}\n                </h3>\n                <p className=\"lead my-3\">{feature.post.excerpt}</p>\n                <p className=\"lead mb-0\">\n                  <Link\n                    to={\"/detailPage/\" + feature.post.id}\n                    className=\"text-white fw-bold\"\n                  >\n                    Continue reading...\n                  </Link>\n                </p>\n              </div>\n            </div>\n            <h3 className=\"text-center trend\">Trending Post</h3>\n            <hr />\n            <div className=\"row row-cols-1 row-cols-md-2 mainrow\">\n              {trending.post.map((post) => (\n                <div key={post.id} className=\"col mb-4\">\n                  <img\n                    src={post.images}\n                    className=\"card-img-top postImage\"\n                    alt=\"have fun\"\n                    height=\"240\"\n                    width=\"200\"\n                    loading=\"lazy\"\n                  />\n                  <div className=\"card-body\">\n                    <Link to={\"/detailPage/\" + post.id}>\n                      <h5 className=\"card-title text-capitalize\">\n                        {post.title}\n                      </h5>\n                      <p className=\"card-text\">\n                        {post.excerpt.substr(0, 100)}....\n                      </p>\n                    </Link>\n                    <div className=\"card-footer rounded\">\n                      <small className=\"text-muted text-capitalize\">\n                        Published on: {post.Published} By {post.subAuthor} As{\" \"}\n                        {post.category}\n                      </small>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"container text-primary\">\n              <h1 className=\"text-center heading\"> Post</h1> <hr />\n            </div>\n            <section>\n              <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3\">\n                {props.posts\n                  .slice(pagesVisited, pagesVisited + PostperPage)\n                  .map((post) => (\n                    <div key={post.id} className=\"col mb-4 shadow-lg\">\n                      <div className=\"card\">\n                        <img\n                          src={post.images}\n                          className=\"card-img-top\"\n                          alt=\"have fun\"\n                          height=\"240\"\n                          width=\"200\"\n                          loading=\"lazy\"\n                        />\n                        <div className=\"card-body\">\n                          <Link to={\"/detailPage/\" + post.id}>\n                            <h5 className=\"card-title text-capitalize\">\n                              {\" \"}\n                              {post.title}\n                            </h5>\n                            <p className=\"card-text\">\n                              {\" \"}\n                              {post.excerpt.substr(0, 100)}....\n                            </p>\n                          </Link>\n                          <p className=\"card-text\">\n                            <small className=\"text-muted\">\n                              {\" \"}\n                              Published on: {post.Published} By {post.subAuthor}{\" \"}\n                              As {post.category}\n                            </small>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </section>\n          </div>\n        ) : (\n          <div className=\"spins mt-4\">\n            <span className=\"spinner\"></span>\n          </div>\n        )}\n      </div>\n      <hr />\n      <div className=\"clearfix\">\n        <ReactPaginate\n          previousLabel={\"Previous\"}\n          nextLabel={\"Next\"}\n          pageCount={pageCount}\n          onPageChange={ChangePage}\n          containerClassName={\"paginatebtn\"}\n          previousClassName={\"PrevBtn\"}\n          nextClassName={\"NextBtn\"}\n          disabledClassName={\"disBtn\"}\n          activeClassName={\"actBtn\"}\n        />\n        <button className=\"btn btn-sm\" onClick={window.scrollTo(0, 5)}></button>\n      </div>\n    </Fragment>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts.posts,\n});\n\nexport default connect(mapStateToProps, { GetPost, Profiles,loadUser })(Post);\n","import axios from 'axios';\nimport { tokenConfig } from './Auth';\nimport { returnErrors } from './messages';\nimport {\n    GET_POST,\n    DELETE_POST,\n    ADD_POST,GET_UPDATE,POST_UPDATED\n} from './Types';\n\nexport const AddPost = (posts)=>(dispatch,getState)=>{\n    const url = \"https://127.0.0.1:8000/api/post/\";\n    axios\n      .post(url, posts, tokenConfig(getState))\n      .then((res) => {\n        dispatch({\n          type: ADD_POST,\n          payload: res.data,\n        });\n      })\n      .catch((err) =>\n        dispatch(returnErrors(err.response.data, err.response.status))\n      );\n}\n\nexport const GetPost = () => (dispatch, getState) => {\n  //  const url = \"http://127.0.0.1:8000/api/post\";\n    const url = \"https://telebryt.pythonanywhere.com/api/post/\";\n    axios\n        .get(url, tokenConfig(getState))\n        .then((res) => {\n            dispatch({\n                type: GET_POST,\n                payload: res.data,\n                \n            });\n        })\n        .catch((res)=>console.log(res))\n        // .catch((err) => dispatch(returnErrors(err.response.data,err.response.req, err.response.status)));\n};\n\n\nexport const DeletePost = (id)=>(dispatch,getState)=>{\n   const url= `https://telebryt.pythonanywhere.com/api/post/${id}/`;\n   axios\n     .delete(url, tokenConfig(getState))\n     .then((res) => {\n       dispatch({\n         type: DELETE_POST,\n         payload: id,\n       });\n     })\n     .catch((err) =>\n       dispatch(returnErrors(err.response.data, err.response.status))\n     );\n}\nexport const getUpdate = (id)=>(dispatch,getState)=>{\n   const url= `https://telebryt.pythonanywhere.com/detail/${id}/`;\n   axios\n     .get(url, tokenConfig(getState))\n     .then((res) => {\n       dispatch({\n         type: GET_UPDATE,\n         payload: res.data,\n       });\n     })\n     .catch((err) =>\n       dispatch(returnErrors(err.response.data, err.response.status))\n     );\n}\nexport const updatePost = (id,formdata) => (dispatch,getState) => {\n    const url = `https://telebryt.pythonanywhere.com/api/detail/` + id + '/';\n    axios\n      .put(url, formdata, tokenConfig(getState))\n      .then((res) => {\n        dispatch({\n          type: POST_UPDATED,\n          payload: res.data,\n        });\n      })\n      .catch((err) =>\n        dispatch(returnErrors(err.response.data, err.response.status))\n      );\n}","import React, { Component } from 'react'\nimport { login } from '../../../Actions/Auth'\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport {createMessage} from '../../../Actions/messages';\nclass Login extends Component {\n  state = {\n    username:'',\n    password:''\n  };\n  static propTypes ={\n    login: PropTypes.func.isRequired,\n    isAuthenticated:PropTypes.bool,\n\n  };\n   onChange = (e) =>this.setState({[e.target.name]:e.target.value})\n   onSubmit = (e) =>{\n     e.preventDefault();\n     this.props.login(this.state.username, this.state.password);\n\n   };\n    render() {\n      if (this.props.isAuthenticated) {\n        return <Redirect to = \"/\" />\n      }\n      const {username,password} = this.state\n        return (\n          <div className=\"container col-md-6\">\n            <div className=\"container text-primary\">\n              <h1 className=\" display-4 text-center heading\"> Login</h1> <hr />\n            </div>\n            <form onSubmit={this.onSubmit} className=\"px-4 py-3\">\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleDropdownFormEmail1\">Username</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"exampleDropdownFormEmail1\"\n                  placeholder=\"Doe\"\n                  name=\"username\"\n                  value={username}\n                  onChange={this.onChange}\n                  required\n                  autoFocus\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleDropdownFormPassword1\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"exampleDropdownFormPassword1\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={this.onChange}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <div className=\"form-check\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    id=\"dropdownCheck\"\n                  />\n                  <label className=\"form-check-label\" htmlFor=\"dropdownCheck\">\n                    Remember me\n                  </label>\n                </div>\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-block btn-rounded\"\n              >\n                Login\n              </button>\n            </form>\n            <div className=\"dropdown-divider\"></div>\n            <Link to=\"/register\">New around here? Sign up</Link> <br />\n            <Link to=\"/register\"> Forgot Password?</Link>\n          </div>\n        );\n    }\n}\nconst mapPropsToState =(state)=>({\n  isAuthenticated: state.Auth.isAuthenticated,\n});\nexport default connect(mapPropsToState,{login,createMessage})(Login);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Registers }  from '../../../Actions/Auth';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { createMessage } from \"../../../Actions/messages\";\n\n\nclass Register extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  };\n  static propTypes = {\n    Registers: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n  };\n  onChange = (e) =>\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { username, email, password, password2 } = this.state;\n    if (password !== password2) {\n     toast.error(\"Password do not match\")\n    } else {\n      const newUser = {\n        username,\n        email,\n        password,\n      };\n      this.props.Registers(newUser);\n    }\n  };\n \n  render() {\n    if (this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n    const { username, email, password, password2 } = this.state;\n    return (\n      <div className=\"container col-md-6\">\n        <div className=\"container text-primary\">\n          <h1 className=\" display-4 text-center heading\"> Register</h1> <hr />\n        </div>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-row\">\n            <div className=\"htmlForm-group col-md-6\">\n              <label htmlFor=\"inputEmail4\">Email</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"inputEmail4\"\n                name=\"email\"\n                value={email}\n                onChange={this.onChange}\n                required\n                autoFocus\n              />\n            </div>\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputuser9\">Username</label>\n              <input\n                type=\"type\"\n                className=\"form-control\"\n                id=\"inputuser9\"\n                name=\"username\"\n                value={username}\n                onChange={this.onChange}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"form-group form-row\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputPassword7\">Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"inputPassword7\"\n                name=\"password\"\n                value={password}\n                onChange={this.onChange}\n                required\n              />\n            </div>\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputPassword4\">Confirm Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"inputPassword4\"\n                name=\"password2\"\n                value={password2}\n                onChange={this.onChange}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                id=\"gridCheck\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"gridCheck\">\n                keep me login\n              </label>\n            </div>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary btn-block\">\n            Register\n          </button>\n          <Link to=\"/login\">Already Have Account?</Link>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.Auth.isAuthenticated,\n  });\nexport default connect(mapStateToProps,{Registers,createMessage})(Register);","import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { login } from \"../../../Actions/Auth\";\nimport { createMessage } from \"../../../Actions/messages\";\nimport Avatar from \"react-avatar\";\nconst DetailedPage = (props) => {\n  const history = useHistory();\n  DetailedPage.prototype = {\n    Auth: PropTypes.object.isRequired,\n  };\n  props.history.listen((location, action) => {\n    window.scrollTo(0, 0);\n  });\n  const { id } = useParams();\n  const { user, token } = props.Auth;\n  const [data, setData] = useState({\n    posts: [],\n  });\n  const [comments, setcomment] = useState({\n    coms: [],\n  });\n  const [loading, setLoading] = useState(false);\n  const { isAuthenticated } = props.Auth;\n\n  const [lform, setlform] = useState({ username: \"\", password: \"\" });\n  useEffect(() => {\n    axios\n      .get(\"https://telebryt.pythonanywhere.com/api/detail/\" + id)\n      .then((res) => {\n        setData({\n          posts: res.data,\n        });\n        setLoading(true);\n        console.log(res.data);\n      });\n\n    axios\n      .get(\"https://telebryt.pythonanywhere.com/api/comments/\" + id)\n      .then((res) => {\n        setcomment({\n          coms: res.data,\n        });\n        setLoading(true);\n        console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, [id, setData]);\n\n  const initialformdata = {\n    author: \"\",\n    body: \"\",\n  };\n  const [formdata, updateformdata] = useState(initialformdata);\n  const onChange = (e) => {\n    updateformdata({\n      ...formdata,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (formdata.body !== \"\") {\n      const body = formdata.body;\n      const name = user.username;\n      const post = data.posts.id;\n      const datas = { post, name, body };\n      console.log(datas);\n\n      axios\n        .post(\"https://telebryt.pythonanywhere.com/api/postcomment/\", datas)\n        .then((res) => {\n          toast.success(\"commented successfully\");\n        })\n        .catch((err) => {\n          toast.error(err + \"Try Again\");\n        });\n      history.push({\n        pathname: `/detailpage/${id}`,\n      });\n      window.location.reload();\n      toast.success(\"commented successfully\");\n    } else {\n      toast.error(\"You Can't Submit Empty Field\");\n    }\n  };\n\n  const OnChange = (e) => {\n    setlform({\n      ...lform,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const OnSubmit = (e) => {\n    e.preventDefault();\n    props.login(lform.username, lform.password);\n  };\n\n  // const onLike = ({e}) => {\n  //   const url = `https://telebryt.pythonanywhere.com/api/post/${id}/vote/`;\n  //    const config = {\n  //      headers: {\n  //        \"Content-Type\": \"application/json\",\n  //      },\n  //    };\n\n  //    // If token, add to headers config\n  //    if (token) {\n  //      config.headers[\"Authorization\"] = `Token ${token}`;\n  //    }\n  //   axios.post(url,config);\n\n  // }\n  // const onUnLike = (e) => {\n  //         const url = `https://telebryt.pythonanywhere.com/api/post/${id}/vote/`;\n  //         const config = {\n  //           headers: {\n  //             \"Content-Type\": \"application/json\",\n  //           },\n  //         };\n\n  //         // If token, add to headers config\n  //         if (token) {\n  //           config.headers[\"Authorization\"] = `Basic ${token}`;\n  //         }\n  //   const body  = JSON.stringify({\"action\":\"down\"})\n  //     axios.post(url,body,config);\n  //   };\n\n  \n  const sendcomment = comments.coms;\n\n  return (\n    <>\n      <section>\n        {loading ? (\n          <div className=\"col-md-12 shadow-lg\">\n            <div className=\"container\">\n              \n                <div className=\"col mb-4 text-center\">\n                  <img\n                    src={data.posts.images}\n                    className=\"card-img-top col-md-6\"\n                    alt=\"have fun\"\n                    height=\"240\"\n                    width=\"150\"\n                  />\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title text-center\">{data.posts.title}</h5>\n                    <p className=\"card-text\">{data.posts.content}</p>\n\n                    <div className=\"card-footer\">\n                      <small className=\"text-muted\">\n                        Published on: {data.posts.Published} By{\" \"}\n                        {data.posts.subAuthor}\n                    </small>\n                   \n                    </div>\n                  </div>\n                </div>\n              \n            </div>\n          </div>\n        ) : (\n          <div className=\"spins mt-4\">\n            <span className=\"spinner\"></span>\n          </div>\n        )}\n      </section>\n      <div className=\"container col-md-4\">\n        <button\n          className=\"btn btn-primary btn-lg btn-block col-md-8 mt-5\"\n          data-toggle=\"modal\"\n          data-target=\"#myModal\"\n        >\n          {sendcomment.length}\n          <i className=\"fa fa-comments\" aria-hidden=\"true\"></i>\n          Comments\n        </button>\n\n        <div id=\"myModal\" className=\"modal fade\">\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-hidden=\"true\"\n                >\n                  &times;\n                </button>\n                <h4 className=\"modal-title pl-2\">\n                  {\" \"}\n                  {sendcomment.length} Comments\n                </h4>\n              </div>\n              <div className=\"modal-body \">\n                <div className=\"container\">\n                  <h4 className=\"text-center\"> Comments</h4>\n                  <hr />\n\n                  {sendcomment.map(function (o, i) {\n                    return (\n                      <div className=\"col-md-6\" key={i}>\n                        <div className=\"alert\">\n                          <h4>\n                            <span>\n                              <Avatar\n                                textSizeRatio={1.75}\n                                color={Avatar.getRandomColor(\"sitebase\", [\n                                  \"red\",\n                                  \"yellow\",\n                                  \"green\",\n                                ])}\n                                name={o.name}\n                                size=\"50\"\n                                round={true}\n                              />\n                            </span>\n                            <small className=\"text-capitalize\">\n                              {\"  \"}\n                              {o.name}\n                            </small>\n                          </h4>\n                          <span>{o.body}</span>\n                          \n                        </div>\n                        <hr className=\"solid col-md-12\" />\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                {isAuthenticated ? (\n                  <div className=\"container\">\n                    <form className=\"px-4 py-3 col-md-12\" onSubmit={onSubmit}>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"exampleDropdownFormPost\">\n                          Add Comment\n                        </label>\n                        <textarea\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"exampleDropdownFormPost\"\n                          placeholder=\"Comment\"\n                          name=\"body\"\n                          value={formdata.body}\n                          onChange={onChange}\n                        />\n                      </div>\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-md btn-block\"\n                      >\n                        Send\n                      </button>\n                    </form>\n                  </div>\n                ) : (\n                  <></>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {isAuthenticated ? (\n        \"\"\n      ) : (\n        <div className=\"container mt-2 col-md-4\">\n          <div id=\"accordianId\" role=\"tablist\" aria-multiselectable=\"true\">\n            <div className=\"card\">\n              <div className=\"card-header\" role=\"tab\" id=\"section1HeaderId\">\n                <h5 className=\"mb-0\">\n                  <a\n                    data-toggle=\"collapse\"\n                    data-parent=\"#accordianId\"\n                    href=\"#section1ContentId\"\n                    aria-expanded=\"true\"\n                    aria-controls=\"section1ContentId\"\n                  >\n                    Login to add comment\n                  </a>\n                </h5>\n              </div>\n              <div\n                id=\"section1ContentId\"\n                className=\"collapse in\"\n                role=\"tabpanel\"\n                aria-labelledby=\"section1HeaderId\"\n              >\n                <div className=\"card-body\">\n                  <div>\n                    <form onSubmit={OnSubmit} className=\"px-4 py-3\">\n                      <div className=\"form-group\">\n                        <label htmlFor=\"exampleDropdownFormEmail1\">\n                          Username\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"exampleDropdownFormEmail1\"\n                          placeholder=\"Doe\"\n                          name=\"username\"\n                          value={lform.username}\n                          onChange={OnChange}\n                          required\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"exampleDropdownFormPassword1\">\n                          Password\n                        </label>\n                        <input\n                          type=\"password\"\n                          className=\"form-control\"\n                          id=\"exampleDropdownFormPassword1\"\n                          placeholder=\"Password\"\n                          name=\"password\"\n                          value={lform.password}\n                          onChange={OnChange}\n                          required\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"form-check\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"form-check-input\"\n                            id=\"dropdownCheck\"\n                          />\n                          <label\n                            className=\"form-check-label\"\n                            htmlFor=\"dropdownCheck\"\n                          >\n                            Remember me\n                          </label>\n                        </div>\n                      </div>\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block btn-rounded\"\n                      >\n                        Login\n                      </button>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"card\">\n              <div className=\"card-header\" role=\"tab\" id=\"section2HeaderId\">\n                <h5 className=\"mb-0\">\n                  <a\n                    data-toggle=\"collapse\"\n                    data-parent=\"#accordianId\"\n                    href=\"#section2ContentId\"\n                    aria-expanded=\"true\"\n                    aria-controls=\"section2ContentId\"\n                  >\n                    Register to add Comment\n                  </a>\n                </h5>\n              </div>\n              <div\n                id=\"section2ContentId\"\n                className=\"collapse in\"\n                role=\"tabpanel\"\n                aria-labelledby=\"section2HeaderId\"\n              >\n                <div className=\"card-body\">\n                  <div className=\"container col-md-6\">\n                    <div className=\"container text-primary\">\n                      <h4 className=\"text-center heading\">\n                        {\" \"}\n                        <Link to=\"/register\">Click here to Register</Link>\n                      </h4>{\" \"}\n                      <hr />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  Auth: state.Auth,\n});\n\nexport default connect(mapStateToProps, { login, createMessage })(DetailedPage);\n\n","\nimport React, { Fragment, useState } from 'react';\nimport {useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\n\n\nconst CreatePost = (props) => {\n  CreatePost.prototype = {\n    Auth: PropTypes.object.isRequired,\n  };\n  const history = useHistory();\n  const initialState = Object.freeze({\n    title: \"\",\n    excerpt: \"\",\n    content: \"\",\n    campus: \"\",\n    category: \"\",\n  });\n  const { user } = props.Auth;\n  const name = user.username;\n  const [formdata, updateformdata] = useState(initialState);\n  const [postimage, UpdatePostImage] = useState(null);\n\n  const onChange = (e) => {\n    if (e.target.files) {\n      UpdatePostImage({\n        image: e.target.files[0],\n      });\n      console.log(e.target.files);\n    } else {\n      updateformdata({\n        ...formdata,\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const url = \"https://telebryt.pythonanywhere.com/api/createpost/\";\n\n    const postform = new FormData();\n    postform.append(\"subAuthor\", name);\n    postform.append(\"title\", formdata.title);\n    postform.append(\"content\", formdata.content);\n    postform.append(\"campus\", formdata.campus);\n    postform.append(\"excerpt\", formdata.excerpt);\n    postform.append(\"category\", formdata.category);\n    postform.append(\"images\", postimage.image, postimage.image.name);\n\n    axios\n      .post(url, postform, config)\n      .then((res) => {\n        toast.info(\"created succefully\");\n      })\n      .catch((err) => toast.error(\"Post not created\"));\n\n    history.push({\n      pathname: \"/\",\n    });\n  }; \n\n  return (\n    <Fragment>\n      <div className=\"container col-md-6\">\n        <div className=\"container text-primary\">\n          <h1 className=\" display-4 text-center heading\"> Create Post</h1>{\" \"}\n          <hr />\n        </div>\n        <form className=\"px-4 py-3\" onSubmit={onSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleDropdownFormPost\">Title</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleDropdownFormPost\"\n              placeholder=\"Title\"\n              name=\"title\"\n              value={formdata.title}\n              onChange={onChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleDropdownFormPost\">Excerpt</label>\n            <textarea\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleDropdownFormPost\"\n              placeholder=\"Excerpt\"\n              name=\"excerpt\"\n              value={formdata.excerpt}\n              onChange={onChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleDropdownFormPost\">Content</label>\n            <textarea\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleDropdownFormPost\"\n              placeholder=\"Content\"\n              name=\"content\"\n              value={formdata.content}\n              onChange={onChange}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"sel1\">Select Category:</label>\n            <select\n              className=\"form-control\"\n              id=\"sel1\"\n              name=\"category\"\n              value={formdata.category}\n              onChange={onChange}\n            >\n              <option>.....</option>\n              <option>News</option>\n              <option>Politics</option>\n              <option>Education</option>\n              <option>Blog</option>\n              <option>Article</option>\n              <option>Entertainment</option>\n              <option>Relationship</option>\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"sel1\">Select Campus:</label>\n            <select\n              className=\"form-control\"\n              id=\"sel1\"\n              name=\"campus\"\n              value={formdata.campus}\n              onChange={onChange}\n            >\n              <option disabled>\n                .....Or if not available just choose university\n              </option>\n              <option>University</option>\n              <option>College</option>\n              <option>CENTRAL</option>\n              <option>Ashesi</option>\n              <option>Legon</option>\n              <option>KNUST</option>\n              <option>UCC</option>\n              <option>UHAS</option>\n              <option>KTU</option>\n              <option>HTU</option>\n              <option>UPS</option>\n              <option>TTU</option>\n              <option>RMU</option>\n              <option>GTUC</option>\n              <option>UMAT</option>\n              <option>ATU</option>\n              <option>UEW</option>\n              <option>UDS</option>\n              <option>UENR</option>\n              <option>CCTU</option>\n              <option>KsTU</option>\n              <option>TATU</option>\n              <option>STU</option>\n              <option>UESD</option>\n              <option>GIJ</option>\n              <option>GIMPA</option>\n              <option>NAFTI</option>\n              <option>VVU</option>\n              <option>ANU</option>\n              <option>AIT</option>\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleDropdownFormPost\">Picture</label>\n            <input\n              type=\"file\"\n              className=\"form-control\"\n              id=\"exampleDropdownFormPost\"\n              name=\"image\"\n              onChange={onChange}\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary btn-block btn-rounded\"\n          >\n            Create Post\n          </button>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\n\n\nconst mapStateToProps =(state)=>({\n  Auth:state.Auth,\n});\n\nexport default connect(mapStateToProps, null)(CreatePost);\n","import React from 'react';\n\nconst PageNotFound = () => <h1>Opps!! page not found</h1>\nexport default PageNotFound;","import {\n    SIGNUP_FAIL,SIGNUP_SUCCESS,\n    LOGIN_FAIL,LOGIN_SUCCESS,\n    USER_LOADED,\n    AUTH_ERROR,USER_LOADING,LOGOUT_SUCCESS, ADD_PROFILE,RESET_PASSWORD\n} from '../Actions/Types';\n\nconst initialState = {\n    isLoading:false,\n    token:localStorage.getItem('token'),\n    isAuthenticated:null,\n    user: null,\n    profile: null,\n}\n\nexport default function  (state = initialState,action) {\n    switch (action.type) {\n      case USER_LOADING:\n        return {\n          ...state,\n          isLoading: true,\n        };\n      case USER_LOADED:\n        return {\n          ...state,\n          isLoading: false,\n          isAuthenticated: true,\n          user: action.payload,\n        };\n      case ADD_PROFILE:\n        localStorage.getItem(\"token\", action.payload.token);\n        return {\n          ...state,\n          isLoading: false,\n          isAuthenticated: true,\n          profile: action.payload,\n        };\n      case LOGIN_SUCCESS:\n      case SIGNUP_SUCCESS:\n      case RESET_PASSWORD:\n        localStorage.getItem(\"token\", action.payload.token);\n        return {\n          ...state,\n          ...action.payload,\n          isLoading: false,\n          isAuthenticated: true,\n        };\n      case AUTH_ERROR:\n      case LOGIN_FAIL:\n      case SIGNUP_FAIL:\n      case LOGOUT_SUCCESS:\n        localStorage.removeItem(\"token\");\n        return {\n          ...state,\n          token: null,\n          user: null,\n          isAuthenticated: false,\n          isLoading: false,\n        };\n\n      default:\n        return state;\n    }\n    \n}","import {\n    GET_POST,ADD_POST,DELETE_POST,POST_UPDATED,GET_UPDATE\n} from '../Actions/Types'\n\nconst initialState={\n    posts: [],\n    update:[],\n}\n\nexport default function (state= initialState,action) {\n    switch (action.type) {\n        case GET_POST:\n            return{\n            ...state,\n            posts:action.payload,\n            };\n        case GET_UPDATE:\n            return{\n            ...state,\n                update: action.payload,\n            \n            };\n        case ADD_POST:\n        return{\n            ...state,\n            posts:[...state.posts,action.payload]\n        };\n        case POST_UPDATED:\n        return{\n            ...state,\n            update:[...state.posts,action.payload]\n        };\n        case DELETE_POST:\n            return {\n                ...state,\n                posts:state.posts.filter((post) => post.id !==action.payload),\n                    \n                \n            };\n        default:\n            return state;\n    }\n}\n","import React from 'react'\nimport {\n GET_COMMENTS,ADD_COMMENT\n} from '../Actions/Types';\nconst inistialState = {\n    comments: [],\n}\nexport default function (state = inistialState,action) {\n    switch(action.type){\n        case ADD_COMMENT:\n            return({\n                ...state,\n                comments: [...state.comments,action.payload]\n            });\n        case GET_COMMENTS:\n            return({\n                ...state,\n                comments:action.payload\n            }) \n            \n        default:\n            return state\n    }\n    \n    \n}\n","import { GET_ERRORS } from \"../Actions/Types\";\n\nconst initialState = {\n  msg: {},\n  status: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n      };\n    default:\n      return state;\n  }\n}\n","import { CREATE_MESSAGE } from \"../Actions/Types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CREATE_MESSAGE:\n      return (state = action.payload);\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport Auth from './Auth';\nimport posts from './Post'\nimport comments from './comments';\nimport errors from './errors';\nimport messages from './messages';\n\nexport default combineReducers({\n    Auth,\n    posts,\n    comments,\n    errors,\n    messages,\n    \n})","import {createStore,applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport rootReducers from './Reducers';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n\n\nconst persistConfig = {\n    key: 'root',\n    storage:storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducers)\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n    persistedReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware)),\n);\nconst persistor = persistStore(store);\n\nexport {store,persistor};\n","import React, { Fragment,useEffect, useState } from 'react';\nimport {useHistory,useParams } from 'react-router-dom';\nimport axios from 'axios';\n\n\n\nexport default function UpdatePosts() {\n    const { id } = useParams();\n    const history = useHistory()\n    const initialState = Object.freeze({\n        title: '',\n        excerpt: '',\n        content: '',\n        campus: '',\n        category: '',\n    });\n    const [formdata, updateformdata] = useState(initialState);\n    useEffect(() => {\n       \n        const url = \"https://telebryt.pythonanywhere.com/api/detail/\" + id;\n        axios\n            .get(url)\n            .then((res) => {\n                updateformdata({\n                    ...formdata,\n                    title: res.data.title,\n                    excerpt: res.data.excerpt,\n                    content: res.data.content,\n                    campus : res.data.campus,\n                    category: res.data.category,\n    \n                });\n                console.log(res.data);\n\n        })\n    }, [updateformdata,id,formdata]);\n    \n    const onChange = (e) => {\n        updateformdata({\n            ...formdata,\n            [e.target.name]: e.target.value,\n        });\n    };\n    const onSubmit = (e) => {\n        e.preventDefault();\n        console.log(formdata);\n        axios.put(`https://telebryt.pythonanywhere.com/api/detail/` + id + \"/\", {\n          title: formdata.title,\n          excerpt: formdata.excerpt,\n          content: formdata.content,\n          campus: formdata.campus,\n          category: formdata.category,\n        });\n        history.push({\n            pathname: '/',\n        });\n        // window.location.reload();\n    };\n\n        return(\n                <Fragment>\n\n                 <div className = \"container col-md-6\">\n                    <div className = \"container text-primary\"> \n                    <h1 className =  \" display-4 text-center heading\"> Create Post</h1> <hr />\n                    </div>\n                    <form className=\"px-4 py-3\" onSubmit = {onSubmit}>\n                    <div className=\"form-group\">\n                    <label htmlFor=\"exampleDropdownFormPost\">Title</label>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleDropdownFormPost\" placeholder=\"Title\" name= \"title\" value={formdata.title} onChange = {onChange} />\n                    </div>\n                    <div className=\"form-group\">\n                    <label htmlFor=\"exampleDropdownFormPost\">Excerpt</label>\n                    <textarea type=\"text\" className=\"form-control\" id=\"exampleDropdownFormPost\" placeholder=\"Excerpt\" name= \"excerpt\" value={formdata.excerpt} onChange = {onChange} />\n                    </div>\n                    <div className=\"form-group\">\n                    <label htmlFor=\"exampleDropdownFormPost\">Content</label>\n                    <textarea type=\"text\" className=\"form-control\" id=\"exampleDropdownFormPost\" placeholder=\"Content\" name= \"content\" value={formdata.content} onChange = {onChange} />\n                    </div>\n\n                   \n                        <div className=\"form-group\">\n                           <label htmlFor=\"sel1\">Select Category:</label>\n                           <select className=\"form-control\" id=\"sel1\" name= \"category\" value={formdata.category} onChange = {onChange} >\n                              <option>.....</option>\n                              <option>News</option>\n                              <option>Politics</option>\n                              <option>Education</option>\n                              <option>Blog</option>\n                              <option>Article</option>\n                              <option>Entertainment</option>\n                           </select>\n                           </div>\n                        <div className=\"form-group\">\n                           <label htmlFor=\"sel1\">Select Campus:</label>\n                           <select className=\"form-control\" id=\"sel1\" name= \"campus\" value={formdata.campus} onChange = {onChange}>\n                              <option disabled>.....Or if not available just choose university</option>\n                              <option>University</option>\n                              <option>Legon</option>\n                              <option>KNUST</option>\n                              <option>UCC</option>\n                              <option>UHAS</option>\n                              <option>KTU</option>\n                           </select>\n                           </div>\n                   \n               \n                    <button type=\"submit\" className=\"btn btn-primary btn-block btn-rounded\">Create Post</button>\n                </form>\n                </div>              \n                </Fragment>\n\n\n                \n                \n        )\n    \n}\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nexport default function Searchbar() {\n   \n\tconst search = \"https://telebryt.pythonanywhere.com/api/search/\";\n  const [appState, setAppState] = useState({\n    search: \"\",\n    posts: [],\n  });\nconst [isloading, setisLoading]=useState(false)\n  useEffect(() => {\n      axios\n          .get( search + window.location.search)\n          .then((res) => {\n            const allPosts = res.data;\n            setAppState({ posts: allPosts });\n            console.log(res.data);\n            setisLoading(true)\n          });\n  }, [setAppState]);\n    const post = appState.posts;\n    const success = (\n      <>\n        <div className=\"container\">\n          <div className=\"container text-primary\">\n            <h1 className=\" display-4 text-center heading\"> Search Results</h1>{\" \"}\n            <hr />\n          </div>\n          <section>\n            <div className=\"row row-cols-1 row-cols-md-3 mainrow\">\n              {appState.posts.map((post) => (\n                <div key={post.id} className=\"col mb-4\">\n                  <img\n                    src={post.images}\n                    className=\"card-img-top\"\n                    alt=\"have fun\"\n                    height=\"240\"\n                    width=\"200\"\n                  />\n                  <div className=\"card-body\">\n                    <Link to={\"/detailPage/\" + post.id}>\n                      <h5 className=\"card-title\">{post.title}</h5>\n                      <p className=\"card-text\">{post.excerpt}</p>\n                    </Link>\n                    <div className=\"card-footer\">\n                      <small className=\"text-muted\">\n                        Published on: {post.Published} By {post.subAuthor} As{\" \"}\n                        {post.category}\n                      </small>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </section>\n        </div>\n      </>\n    );\n    const failed = (\n      <>\n        <div className=\"container col-md-6 mt-12 mb-12\">\n        <h1 className=\" display-4 text-center heading\"> Search Results</h1>{\" \"}\n        <hr />\n          <h2 className=\"alert-info display-5 \">No Results Found!!..Try Again </h2>\n        </div>\n      </>\n    );\n        return (\n          <div>\n            <>\n            \n             {!post || post.length===0?failed:success}\n              <hr />\n             \n            </>\n          </div>\n        );\n    }\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\n\nfunction Category(props) {\n  const [catBlog, setCateBlog] = useState({ post: [] });\n  const [category, setCategory] = useState(\"\");\n  useEffect(() => {\n    const categorys = props.match.params.id;\n    setCategory(categorys);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n      axios\n        .post(\n          `https://telebryt.pythonanywhere.com/api/category`,\n          { categorys },\n          config\n        )\n        .then((res) => {\n          setCateBlog({ post: res.data });\n        })\n        .catch((err) => console.log(err));\n     \n  }, [props.match.params.id]);\n    \n  console.log(catBlog.post);\n  const cat = catBlog.post\n    return (\n      <>\n        <div className=\"nav-scroller py-1 mb-2\">\n          <nav className=\"nav d-flex justify-content-between\">\n            <Link className=\"p-2 link-secondary\" to=\"/category/News\">\n              News\n            </Link>\n            <Link className=\"p-2 link-secondary\" to=\"/category/Politics\">\n              Politics\n            </Link>\n            <Link className=\"p-2 link-secondary\" to=\"category/Relationship\">\n              Relationship\n            </Link>\n            <Link className=\"p-2 link-secondary\" to=\"/category/Education\">\n              Education\n            </Link>\n            <Link className=\"p-2 link-secondary\" to=\"/category/Blog\">\n              Blog\n            </Link>\n            <Link className=\"p-2 link-secondary\" to=\"/category/Article\">\n              Article\n            </Link>\n\n            <Link className=\"p-2 link-secondary\" to=\"/category/Science\">\n              Science\n            </Link>\n            <Link className=\"p-2 link-secondary\" to=\"/category/Entertainment\">\n              Entertainment\n            </Link>\n          </nav>\n        </div>\n        <h3 className=\"text-center text-capitalize trend\">{category} Post</h3>\n        <hr />\n        {cat.length === 0 ? (\n          <div className=\"col md-6\">\n            {\" \"}\n            <h1>No Post for {category} .....</h1>\n          </div>\n        ) : (\n          <div className=\"container row row-cols-1 row-cols-md-2 ml-3 mr-3\">\n            {cat.map((post) => (\n              <div key={post.id} className=\"col mb-4\">\n                <img\n                  src={`https://telebryt.pythonanywhere.com` + post.images}\n                  className=\"card-img-top\"\n                  alt=\"have fun\"\n                  height=\"240\"\n                  width=\"200\"\n                />\n                <div className=\"card-body\">\n                  <Link to={\"/detailPage/\" + post.id}>\n                    <h5 className=\"card-title\">{post.title}</h5>\n                    <p className=\"card-text\">{post.excerpt}</p>\n                  </Link>\n                  <div className=\"card-footer\">\n                    <small className=\"text-muted\">\n                      Published on: {post.Published} By {post.subAuthor} As{\" \"}\n                      {post.category}\n                    </small>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n        <h4>\n          <Link className=\"float-right pr-4\" to=\"/\">\n            Back to Home\n          </Link>\n        </h4>\n      </>\n    );\n}\n\nexport default Category;\n","import React, { Component, Fragment } from \"react\";\nimport { toast } from  'react-toastify';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nexport class Alerts extends Component {\n  static propTypes = {\n    error: PropTypes.object.isRequired,\n    message: PropTypes.object.isRequired,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, message } = this.props;\n    if (error !== prevProps.error) {\n      if (error.msg.name) toast.error(`Name: ${error.msg.name.join()}`);\n      if (error.msg.email) toast.error(`Email: ${error.msg.email.join()}`);\n      if (error.msg.message)\n        toast.error(`Message: ${error.msg.message.join()}`);\n      if (error.msg.non_field_errors)\n        toast.error(error.msg.non_field_errors.join());\n      if (error.msg.username) toast.error(error.msg.username.join());\n    }\n\n    if (message !== prevProps.message) {\n      if (message.deletePost) toast.success(message.deleteLead);\n      if (message.addPost) toast.success(message.addLead);\n      if (message.passwordNotMatch) toast.error(message.passwordNotMatch);\n    }\n  }\n\n  render() {\n    return <Fragment />;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  error: state.errors,\n  message: state.messages,\n});\n\nexport default connect(mapStateToProps)(Alerts);\n","import React, {useState,useEffect} from \"react\";\nimport { Link} from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { Profiles } from '../../../Actions/Auth';\nimport { PasswordReset } from \"../../../Actions/Auth\";\nfunction Profile(props) {\n  Profile.prototype = {\n    Auth: PropTypes.object.isRequired,\n    profile: PropTypes.func.isRequired,\n    PasswordReset:PropTypes.func.isRequired,\n    \n  };\n  const { user } = props.Auth;\n\n  useEffect(() => {\n    props.Profiles()\n  \n  }, []);\n  const [passRet, setPassRet] = useState({ old_password: '', new_password: '' });\n  const onChange = (e) => {\n\n    setPassRet({\n        ...passRet,\n       [e.target.name]: e.target.value,\n    })\n  }\n    \n  \n  console.log(passRet)\n  const onSubmit = (e) => {\n    e.preventDefault();\n    props.PasswordReset(passRet);\n   window.location.reload()\n  }\n  const profiles = props.profile.data;\n  const userdata = props.profile.data.prouser\n  console.log(userdata)\n  return (\n    <>\n      <div className=\"text-center container col-md-6\">\n        <h3 className=\"mt-4\">Profile Details</h3>\n        <div className=\"col mb-4\">\n          <img\n            src={`https://telebryt.pythonanywhere.com`+profiles.image}\n            alt=\"avatar\"\n            className=\"avatarp\"\n          />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Username: {user.username}</h5>\n            <div className=\"table-responsive\">\n              <table className=\"table table-hover\">\n                <tbody>\n                  <tr>\n                    <td>\n                      <h2>Place of Study: {profiles.university}</h2>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <h2>About: {profiles.bio}</h2>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <h2>Interest: {profiles.interest}</h2>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <h2>Email: {userdata.email}</h2>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <span>\n                        <Link to=\"/prof\">\n                          {\" \"}\n                          <i className=\"fa fa-user-edit\" aria-hidden=\"true\">\n                            Edit Profile\n                          </i>\n                        </Link>\n                      </span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <div className=\"container mt-2\">\n                        <div\n                          id=\"accordianId\"\n                          role=\"tablist\"\n                          aria-multiselectable=\"true\"\n                        >\n                          <div className=\"card\">\n                            <div\n                              className=\"card-header\"\n                              role=\"tab\"\n                              id=\"section1HeaderId\"\n                            >\n                              <h5 className=\"mb-0\">\n                                <a\n                                  data-toggle=\"collapse\"\n                                  data-parent=\"#accordianId\"\n                                  href=\"#section1ContentId\"\n                                  aria-expanded=\"true\"\n                                  aria-controls=\"section1ContentId\"\n                                >\n                                  Change Password\n                                </a>\n                              </h5>\n                            </div>\n                            <div\n                              id=\"section1ContentId\"\n                              className=\"collapse in\"\n                              role=\"tabpanel\"\n                              aria-labelledby=\"section1HeaderId\"\n                            >\n                              <div className=\"card-body\">\n                                <div>\n                                  <form\n                                    onSubmit={onSubmit}\n                                    className=\"px-4 py-3\"\n                                  >\n                                    <div className=\"form-group\">\n                                      <label htmlFor=\"exampleDropdownFormPassword1\">\n                                        Old Password\n                                      </label>\n                                      <input\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        id=\"exampleDropdownFormPassword1\"\n                                        placeholder=\"Password\"\n                                        name=\"old_password\"\n                                        value={passRet.old_password}\n                                        onChange={onChange}\n                                        required\n                                      />\n                                    </div>\n                                    <div className=\"form-group\">\n                                      <label htmlFor=\"exampleDropdownFormPasswordn\">\n                                        New Password\n                                      </label>\n                                      <input\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        id=\"exampleDropdownFormPasswordn\"\n                                        placeholder=\"New Password\"\n                                        name=\"new_password\"\n                                        value={passRet.new_password}\n                                        onChange={onChange}\n                                        required\n                                      />\n                                    </div>\n\n                                    <button\n                                      type=\"submit\"\n                                      className=\"btn btn-primary btn-block btn-rounded\"\n                                    >\n                                      Submit\n                                    </button>\n                                  </form>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\nconst mapStateToProps = (state) => ({\n  Auth: state.Auth,\n  profile:state.Auth.profile,\n})\n\nexport default connect(mapStateToProps, {Profiles,PasswordReset})(Profile);\n","\nimport React, { Fragment, useState,useEffect } from 'react';\nimport {useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nconst NewProfile = (props) => {\n  NewProfile.prototype = {\n    Auth: PropTypes.object.isRequired,\n  };\n \n  const history = useHistory();\n  const initialState = Object.freeze({\n    about: \"\",\n    university: \"\",\n    interest: \"\",\n    \n  });\n  const { user,token,profile } = props.Auth;\n  const name = user.username;\n  const [formdata, updateformdata] = useState(initialState);\n  const [postimage, UpdatePostImage] = useState(null);\n const profi = profile.data;\n  const onChange = (e) => {\n    if (e.target.files) {\n      UpdatePostImage({\n        image: e.target.files[0],\n      });\n      console.log(e.target.files);\n    }\n    if (formdata.about ===\"\") {\n      updateformdata({\n        about:profi.bio\n      })\n    }\n     if (formdata.interest === \"\") {\n       updateformdata({\n         interest: profi.interest,\n       });\n     }\n      if (formdata.university === \"\") {\n        updateformdata({\n          university: profi.university,\n        });\n      }\n       \n        else {\n         updateformdata({\n           ...formdata,\n           [e.target.name]: e.target.value,\n         });\n       }\n  };\n  console.log(name)\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const url = \"https://telebryt.pythonanywhere.com/api/updateprofile/\";\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    // If token, add to headers config\n    if (token) {\n      config.headers[\"Authorization\"] = `Token ${token}`;\n    }\n\n\n    const postform = new FormData();\n    postform.append(\"image\", postimage.image, postimage.image.name);\n    postform.append(\"bio\", formdata.about);\n    postform.append(\"interest\", formdata.interest);\n    postform.append(\"university\", formdata.university);\n\n    axios\n      .put(url, postform, config)\n      .then((res) => {\n        toast.info(\"created succefully\");\n        history.push({\n          pathname: \"/profile/\",\n        });\n      })\n      .catch((err) => toast.error(\"Post not created\"));\n\n  }; \n  console.log(profile.data)\n \n  return (\n    <Fragment>\n      <div className=\"container col-md-6\">\n        <div className=\"container text-primary\">\n          <h1 className=\" display-4 text-center heading\"> Edit Profile</h1>{\" \"}\n          <hr />\n        </div>\n        <form className=\"px-4 py-3\" onSubmit={onSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleDropdownFormPost\">About</label>\n            <textarea\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleDropdownFormPost\"\n              placeholder=\"about\"\n              name=\"about\"\n              value={formdata.about}\n              onChange={onChange}\n              autoFocus\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleDropdownFormPost\">Your Interest</label>\n            <textarea\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleDropdownFormPost\"\n              placeholder=\"interest\"\n              name=\"interest\"\n              value={formdata.interest}\n              onChange={onChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleDropdownFormPost\">university</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleDropdownFormPost\"\n              placeholder=\"university\"\n              name=\"university\"\n              value={formdata.university}\n              onChange={onChange}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleDropdownFormPost\">Picture</label>\n            <input\n              type=\"file\"\n              className=\"form-control\"\n              id=\"exampleDropdownFormPost\"\n              name=\"image\"\n              onChange={onChange}\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary btn-block btn-rounded\"\n          >\n           profile\n          </button>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\n\n\nconst mapStateToProps =(state)=>({\n  Auth:state.Auth,\n});\n\nexport default connect(mapStateToProps, null)(NewProfile);\n","import React, {  Fragment ,useEffect} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Footer from \"./components/layouts/Footer\";\nimport Header from \"./components/layouts/Header\";\nimport Post from \"./components/Container/pages/Post\";\nimport Login from \"./components/Container/Accounts/Login\";\nimport Register from \"./components/Container/Accounts/Register\";\nimport DetailPage from \"./components/Container/pages/detailPage\";\nimport CreatePost from \"./components/Container/pages/CreatePost\";\nimport PageNotFound from \"./components/Container/PageNotFound\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Update from \"./components/Container/pages/Update\";\nimport Searchbar from \"../src/components/Container/pages/searchbar\";\nimport Category from \"./components/Container/pages/category\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Alert from '../src/components/layouts/alert';\nimport Profile from '../src/components/Container/pages/Profile';\nimport NewProfile from \"../src/components/Container/pages/NewProfile\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport \"jquery/dist/jquery.js\"\nconst App = (props) => {\n\n    return (\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <Router>\n            <Fragment>\n              <Header />\n              <Alert />\n              <Switch>\n                <Route exact path=\"/\" component={Post} />\n                <Route exact path=\"/createPost\" component={CreatePost} />\n                <Route exact path=\"/register\" component={Register} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/detailPage/:id\" component={DetailPage} />\n                <Route exa1t path=\"/update/:id\" component={Update} />\n                <Route exact path=\"/category/:id\" component={Category} />\n                <Route exa1t path=\"/search\" component={Searchbar} />\n                <Route exact path=\"/prof\" component={NewProfile} />\n                <Route exact path=\"/profile\" component={Profile} />\n                <Route component={PageNotFound} />\n              </Switch>\n              <ToastContainer autoClose={3000} hideProgressBar />\n              <Footer />\n            </Fragment>\n          </Router>\n        </PersistGate>\n      </Provider>\n    );\n  \n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nReactDOM.render(<App />, document.getElementById(\"root\"));\nreportWebVitals();\n"],"sourceRoot":""}